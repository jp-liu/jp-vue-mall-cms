{"version":3,"sources":["webpack:///./src/views/main/system/role/role.vue?715a","webpack:///./src/components/page-modal/src/page-modal.vue","webpack:///./src/components/page-modal/src/page-modal.vue?5234","webpack:///./src/components/page-modal/src/page-modal.vue?9440","webpack:///./src/components/page-modal/index.ts","webpack:///./src/views/main/system/role/role.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/views/main/system/role/config/search.config.ts","webpack:///./src/views/main/system/role/config/content.config.ts","webpack:///./src/views/main/system/role/config/modal.config.ts","webpack:///./src/views/main/system/role/role.vue?dec9","webpack:///./src/views/main/system/role/role.vue?7d4e","webpack:///./src/hooks/usePageModal.ts"],"names":["class","title","modalConfig","dialogVisible","width","center","destroy-on-close","footer","type","handleConfirmClick","formData","components","JpForm","props","Object","required","defaultInfo","default","otherInfo","pageName","String","setup","store","originFormData","newValue","formItems","item","value","field","keys","length","dispatch","queryInfo","id","render","searchConfig","searchFormConfig","handleQueryClick","handleResetClick","ref","contentConfig","contentTableConfig","handleNewData","handleEditData","modalInfo","check-strictly","data","roleMenus","show-checkbox","node-key","handleMenuCheckChange","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","label","placeHolder","rules","otherOption","startPlaceholder","endPlaceholder","labelWidth","itemStyle","padding","colLayout","span","newBtnTitle","propList","prop","minWidth","slotName","showIndexColumn","showSelectColumn","name","PageSearch","PageContent","PageModal","usePageSearch","pageContentRef","elTreeRef","editCallback","checks","menuList","setCheckedKeys","usePageModal","undefined","pageModalRef","data1","data2","checkedKeys","halfCheckedKeys","console","log","state","entireMenus","__scopeId","newHandleCallback","editHandleCallback"],"mappings":"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","file":"js/chunk-4a18f114.efafd88b.js","sourcesContent":["export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./role.vue?vue&type=style&index=0&id=0c0016a4&scoped=true&lang=less\"","<template>\n  <div class=\"page-modal\">\n    <el-dialog\n      :title=\"modalConfig.title\"\n      v-model=\"dialogVisible\"\n      width=\"30%\"\n      center\n      destroy-on-close\n    >\n      <jp-form v-bind=\"modalConfig\" v-model=\"formData\"></jp-form>\n      <slot></slot>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleConfirmClick\">确 定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue'\n\nimport { useStore } from '@/store'\n\nimport JpForm from '@/base-ui/form'\n\nexport default defineComponent({\n  components: {\n    JpForm\n  },\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    // 1.绑定属性\n    const store = useStore()\n    const originFormData: any = {}\n    const formData = ref({ ...originFormData })\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 2.内部处理\n    const dialogVisible = ref(false)\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑\n        store.dispatch('system/editPageDataAction', {\n          pageName: props.pageName,\n          queryInfo: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建\n        store.dispatch('system/newPageDataAction', {\n          pageName: props.pageName,\n          queryInfo: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      formData,\n      dialogVisible,\n      handleConfirmClick\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","\nimport { defineComponent, ref, watch } from 'vue'\n\nimport { useStore } from '@/store'\n\nimport JpForm from '@/base-ui/form'\n\nexport default defineComponent({\n  components: {\n    JpForm\n  },\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    // 1.绑定属性\n    const store = useStore()\n    const originFormData: any = {}\n    const formData = ref({ ...originFormData })\n\n    watch(\n      () => props.defaultInfo,\n      (newValue) => {\n        for (const item of props.modalConfig.formItems) {\n          formData.value[`${item.field}`] = newValue[`${item.field}`]\n        }\n      }\n    )\n\n    // 2.内部处理\n    const dialogVisible = ref(false)\n    const handleConfirmClick = () => {\n      dialogVisible.value = false\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑\n        store.dispatch('system/editPageDataAction', {\n          pageName: props.pageName,\n          queryInfo: { ...formData.value, ...props.otherInfo },\n          id: props.defaultInfo.id\n        })\n      } else {\n        // 新建\n        store.dispatch('system/newPageDataAction', {\n          pageName: props.pageName,\n          queryInfo: { ...formData.value, ...props.otherInfo }\n        })\n      }\n    }\n\n    return {\n      formData,\n      dialogVisible,\n      handleConfirmClick\n    }\n  }\n})\n","import { render } from \"./page-modal.vue?vue&type=template&id=6b6df384\"\nimport script from \"./page-modal.vue?vue&type=script&lang=ts\"\nexport * from \"./page-modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import PageModal from './src/page-modal.vue'\n\nexport default PageModal\n","<template>\n  <div class=\"role\">\n    <page-search\n      :searchConfig=\"searchFormConfig\"\n      @queryBtnClick=\"handleQueryClick\"\n      @resetBtnClick=\"handleResetClick\"\n    />\n    <page-content\n      ref=\"pageContentRef\"\n      pageName=\"role\"\n      :contentConfig=\"contentTableConfig\"\n      @newBtnClick=\"handleNewData\"\n      @editBtnClick=\"handleEditData\"\n    ></page-content>\n    <page-modal\n      ref=\"pageModalRef\"\n      :modalConfig=\"modalConfig\"\n      :defaultInfo=\"modalInfo\"\n      pageName=\"role\"\n      :otherInfo=\"otherInfo\"\n    >\n      <el-tree\n        class=\"menu-tree\"\n        :check-strictly=\"false\"\n        ref=\"elTreeRef\"\n        :data=\"roleMenus\"\n        show-checkbox\n        node-key=\"id\"\n        @check=\"handleMenuCheckChange\"\n        :props=\"{ label: 'name', children: 'children' }\"\n      >\n      </el-tree>\n    </page-modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, nextTick } from 'vue'\nimport { useStore } from '@/store'\n\nimport { getMenuChecks } from '@/utils/map-menu'\n\nimport { ElTree } from 'element-plus'\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nexport default defineComponent({\n  name: 'role',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // pageSearch处理hook\n    const [pageContentRef, handleQueryClick, handleResetClick] = usePageSearch()\n\n    // ElTree的处理逻辑\n    const elTreeRef = ref<InstanceType<typeof ElTree>>()\n    // 点击edit的回显回调\n    const editCallback = (item: any) => {\n      nextTick(() => {\n        const checks = getMenuChecks(item.menuList)\n        elTreeRef.value?.setCheckedKeys(checks, true)\n      })\n    }\n    // pageModal的hook\n    const [modalInfo, pageModalRef, handleNewData, handleEditData] = usePageModal(\n      undefined,\n      editCallback\n    )\n    // pageModal的额外参数menuList\n    const otherInfo = ref({})\n    const handleMenuCheckChange = (data1: any, data2: any) => {\n      const checkedKeys = data2.checkedKeys\n      const halfCheckedKeys = data2.halfCheckedKeys\n      const menuList = [...checkedKeys, ...halfCheckedKeys]\n      console.log(menuList)\n      otherInfo.value = { menuList }\n    }\n\n    // 角色选择菜单数据\n    const store = useStore()\n    const roleMenus = computed(() => store.state.entireMenus)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleQueryClick,\n      handleResetClick,\n      modalConfig,\n      modalInfo,\n      pageModalRef,\n      handleNewData,\n      handleEditData,\n      roleMenus,\n      elTreeRef,\n      handleMenuCheckChange,\n      otherInfo\n    }\n  }\n})\n</script>\n\n<style scoped lang=\"less\">\n.menu-tree {\n  margin-left: 25px;\n}\n</style>\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '角色名称',\n      placeHolder: '请输入角色名称',\n      rules: []\n    },\n    {\n      field: 'intro',\n      type: 'input',\n      label: '权限介绍',\n      placeHolder: '请输入权限介绍',\n      rules: []\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      rules: [],\n      otherOption: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        type: 'daterange'\n      }\n    }\n  ],\n  labelWidth: '100px',\n  itemStyle: { padding: '10px 40px' },\n  colLayout: { span: 8 }\n}\n","export const contentTableConfig = {\n  title: '角色列表',\n  newBtnTitle: '新建角色',\n  propList: [\n    { prop: 'name', label: '角色名称', minWidth: '120' },\n    { prop: 'intro', label: '角色权限', minWidth: '120' },\n    { prop: 'createAt', label: '创建时间', minWidth: '250', slotName: 'create' },\n    { prop: 'updateAt', label: '更新时间', minWidth: '250', slotName: 'update' },\n    { label: '操作', minWidth: '120', slotName: 'handler' }\n  ],\n  showIndexColumn: true,\n  showSelectColumn: true\n}\n","import { IForm } from '@/base-ui/form'\n\nexport const modalConfig: IForm = {\n  title: '新建角色',\n  formItems: [\n    { field: 'name', type: 'input', label: '角色名称', placeHolder: '请输入角色名称' },\n    { field: 'intro', type: 'input', label: '角色描述', placeHolder: '请输入角色描述' }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: { padding: 0 }\n}\n","\nimport { defineComponent, computed, ref, nextTick } from 'vue'\nimport { useStore } from '@/store'\n\nimport { getMenuChecks } from '@/utils/map-menu'\n\nimport { ElTree } from 'element-plus'\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { usePageSearch } from '@/hooks/usePageSearch'\nimport { usePageModal } from '@/hooks/usePageModal'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nexport default defineComponent({\n  name: 'role',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup() {\n    // pageSearch处理hook\n    const [pageContentRef, handleQueryClick, handleResetClick] = usePageSearch()\n\n    // ElTree的处理逻辑\n    const elTreeRef = ref<InstanceType<typeof ElTree>>()\n    // 点击edit的回显回调\n    const editCallback = (item: any) => {\n      nextTick(() => {\n        const checks = getMenuChecks(item.menuList)\n        elTreeRef.value?.setCheckedKeys(checks, true)\n      })\n    }\n    // pageModal的hook\n    const [modalInfo, pageModalRef, handleNewData, handleEditData] = usePageModal(\n      undefined,\n      editCallback\n    )\n    // pageModal的额外参数menuList\n    const otherInfo = ref({})\n    const handleMenuCheckChange = (data1: any, data2: any) => {\n      const checkedKeys = data2.checkedKeys\n      const halfCheckedKeys = data2.halfCheckedKeys\n      const menuList = [...checkedKeys, ...halfCheckedKeys]\n      console.log(menuList)\n      otherInfo.value = { menuList }\n    }\n\n    // 角色选择菜单数据\n    const store = useStore()\n    const roleMenus = computed(() => store.state.entireMenus)\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      pageContentRef,\n      handleQueryClick,\n      handleResetClick,\n      modalConfig,\n      modalInfo,\n      pageModalRef,\n      handleNewData,\n      handleEditData,\n      roleMenus,\n      elTreeRef,\n      handleMenuCheckChange,\n      otherInfo\n    }\n  }\n})\n","import { render } from \"./role.vue?vue&type=template&id=0c0016a4&scoped=true\"\nimport script from \"./role.vue?vue&type=script&lang=ts\"\nexport * from \"./role.vue?vue&type=script&lang=ts\"\n\nimport \"./role.vue?vue&type=style&index=0&id=0c0016a4&scoped=true&lang=less\"\nscript.render = render\nscript.__scopeId = \"data-v-0c0016a4\"\n\nexport default script","import { ref } from 'vue'\nimport PageModal from '@/components/page-modal'\n\ntype CallbackFn = (item?: any) => void\n\nexport const usePageModal = (newHandleCallback?: CallbackFn, editHandleCallback?: CallbackFn) => {\n  const modalInfo = ref({})\n  const pageModalRef = ref<InstanceType<typeof PageModal>>()\n  const handleNewData = () => {\n    modalInfo.value = {}\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    newHandleCallback && newHandleCallback()\n  }\n\n  const handleEditData = (item: any) => {\n    modalInfo.value = { ...item }\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    editHandleCallback && editHandleCallback(item)\n  }\n\n  return [modalInfo, pageModalRef, handleNewData, handleEditData]\n}\n"],"sourceRoot":""}